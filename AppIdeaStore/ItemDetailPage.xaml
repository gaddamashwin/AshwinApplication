<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="AppIdeaStore.ItemDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppIdeaStore"
    xmlns:data="using:AppIdeaStore.DataModel"
    xmlns:common="using:AppIdeaStore.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"
            d:Source="{Binding AllGroups[0].Items, Source={d:DesignInstance Type=data:AppIdeaDataSource, IsDesignTimeCreatable=True}}"/>
        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource2"
            Source="{Binding Items2}"/>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid
        Style="{StaticResource LayoutRootStyle}"
        DataContext="{Binding Group}"
        d:DataContext="{Binding AppData, Source={d:DesignInstance Type=data:AppIdeaDataSource, IsDesignTimeCreatable=True}}">

        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="500"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--
            The remainder of the page is one large FlipView that displays details for
            one item at a time, allowing the user to flip through all items in the chosen
            group
        -->
        <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemGridView"
            AutomationProperties.Name="Items In Group"
            TabIndex="1"
            Grid.RowSpan="2"
            Padding="120,126,120,50"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            SelectionMode="None"
            IsSwipeEnabled="false">

            <GridView.Header>
                <StackPanel Width="450">
                    <TextBlock Text="{Binding name}" Margin="0,0,18,20" Style="{StaticResource HeaderTextStyle}" MaxHeight="60"/>
                    <TextBlock Text="{Binding idea}" Margin="0,0,18,0" Style="{StaticResource SubheaderTextStyle}"/>
                    <TextBlock Text="{Binding desc}" Margin="0,0,18,0" Style="{StaticResource BodyTextStyle}"/>
                    <TextBlock Text="{Binding submittedBy}" Margin="0,0,18,0" Style="{StaticResource BodyTextStyle}"/>
                </StackPanel>
            </GridView.Header>
            <GridView.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Margin" Value="52,0,0,10"/>
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="10">
                        <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="255" Height="400">
                            <Image Source="{Binding MyImage}" Stretch="UniformToFill" AutomationProperties.Name="{Binding name}"/>
                        </Border>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>

        <GridView
            x:Name="itemGridView2"
            AutomationProperties.AutomationId="ItemGridView2"
            AutomationProperties.Name="Items In Group"
            Grid.Row="3"
            Grid.RowSpan="1"
            VerticalAlignment="Top"
            ItemsSource="{Binding Source={StaticResource itemsViewSource2}}"
            SelectionMode="None"
            IsSwipeEnabled="false" 
           >

            <GridView.Header>
                <StackPanel>
                    <TextBlock Text="Name" Margin="120,5,125,0" Height="35" Style="{StaticResource SubheaderTextStyle}"/>
                    <TextBlock Text="Rating" Margin="120,5,125,0"  Height="25"  Style="{StaticResource BodyTextStyle}"/>
                    <TextBlock Text="Comment" Margin="120,5,125,0" Height="50" Style="{StaticResource BodyTextStyle}"/>
                </StackPanel>
            </GridView.Header>
            <!--<GridView.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Margin" Value="52,0,0,10"/>
                </Style>
            </GridView.ItemContainerStyle>-->
            <GridView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Width="250" VerticalAlignment="Top">
                        <TextBlock Text="{Binding firstName}" Margin="0,0,18,0" Height="35" Style="{StaticResource SubheaderTextStyle}"/>
                        <Slider Value="{Binding rating}" Maximum="5" Minimum="0" StepFrequency="1" Height="25"  TickFrequency="1" ></Slider>
                        <TextBlock Text="{Binding comment}" Margin="0,0,18,0" Height="50" Style="{StaticResource BodyTextStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>
        
        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{Binding Title}" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1" IsHitTestVisible="false"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The back button respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
