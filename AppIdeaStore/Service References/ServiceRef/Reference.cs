//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
// 
namespace AppIdeaStore.ServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TechnologyType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class TechnologyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int TechnologyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechnologyId {
            get {
                return this.TechnologyIdField;
            }
            set {
                if ((this.TechnologyIdField.Equals(value) != true)) {
                    this.TechnologyIdField = value;
                    this.RaisePropertyChanged("TechnologyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class CommentType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private string comment1Field;
        
        private int commentIdField;
        
        private System.Nullable<System.DateTime> dateField;
        
        private int ratingField;
        
        private System.Nullable<int> statusField;
        
        private int userIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment1 {
            get {
                return this.comment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.comment1Field, value) != true)) {
                    this.comment1Field = value;
                    this.RaisePropertyChanged("comment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int commentId {
            get {
                return this.commentIdField;
            }
            set {
                if ((this.commentIdField.Equals(value) != true)) {
                    this.commentIdField = value;
                    this.RaisePropertyChanged("commentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class ImageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppIdField;
        
        private System.Nullable<System.DateTime> CreatedDateField;
        
        private int ImageIdField;
        
        private byte[] PictField;
        
        private int SequenceField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageId {
            get {
                return this.ImageIdField;
            }
            set {
                if ((this.ImageIdField.Equals(value) != true)) {
                    this.ImageIdField = value;
                    this.RaisePropertyChanged("ImageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Pict {
            get {
                return this.PictField;
            }
            set {
                if ((object.ReferenceEquals(this.PictField, value) != true)) {
                    this.PictField = value;
                    this.RaisePropertyChanged("Pict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SectorType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class SectorType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int SectorIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> appIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectorId {
            get {
                return this.SectorIdField;
            }
            set {
                if ((this.SectorIdField.Equals(value) != true)) {
                    this.SectorIdField = value;
                    this.RaisePropertyChanged("SectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> appID {
            get {
                return this.appIDField;
            }
            set {
                if ((object.ReferenceEquals(this.appIDField, value) != true)) {
                    this.appIDField = value;
                    this.RaisePropertyChanged("appID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsrType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class UsrType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private int userIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="appType", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContract")]
    public partial class appType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] PictField;
        
        private int appIdField;
        
        private System.Nullable<bool> deletedField;
        
        private string descField;
        
        private string ideaField;
        
        private string impactField;
        
        private string issueField;
        
        private string nameField;
        
        private System.Nullable<int> submittedByField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Pict {
            get {
                return this.PictField;
            }
            set {
                if ((object.ReferenceEquals(this.PictField, value) != true)) {
                    this.PictField = value;
                    this.RaisePropertyChanged("Pict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> deleted {
            get {
                return this.deletedField;
            }
            set {
                if ((this.deletedField.Equals(value) != true)) {
                    this.deletedField = value;
                    this.RaisePropertyChanged("deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idea {
            get {
                return this.ideaField;
            }
            set {
                if ((object.ReferenceEquals(this.ideaField, value) != true)) {
                    this.ideaField = value;
                    this.RaisePropertyChanged("idea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string impact {
            get {
                return this.impactField;
            }
            set {
                if ((object.ReferenceEquals(this.impactField, value) != true)) {
                    this.impactField = value;
                    this.RaisePropertyChanged("impact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string issue {
            get {
                return this.issueField;
            }
            set {
                if ((object.ReferenceEquals(this.issueField, value) != true)) {
                    this.issueField = value;
                    this.RaisePropertyChanged("issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> submittedBy {
            get {
                return this.submittedByField;
            }
            set {
                if ((this.submittedByField.Equals(value) != true)) {
                    this.submittedByField = value;
                    this.RaisePropertyChanged("submittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                if ((this.submittedDateField.Equals(value) != true)) {
                    this.submittedDateField = value;
                    this.RaisePropertyChanged("submittedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcApp", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class DcApp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private string descField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string ideaField;
        
        private string impactField;
        
        private string issueField;
        
        private string lastNameField;
        
        private string nameField;
        
        private byte[] pictField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idea {
            get {
                return this.ideaField;
            }
            set {
                if ((object.ReferenceEquals(this.ideaField, value) != true)) {
                    this.ideaField = value;
                    this.RaisePropertyChanged("idea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string impact {
            get {
                return this.impactField;
            }
            set {
                if ((object.ReferenceEquals(this.impactField, value) != true)) {
                    this.impactField = value;
                    this.RaisePropertyChanged("impact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string issue {
            get {
                return this.issueField;
            }
            set {
                if ((object.ReferenceEquals(this.issueField, value) != true)) {
                    this.issueField = value;
                    this.RaisePropertyChanged("issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] pict {
            get {
                return this.pictField;
            }
            set {
                if ((object.ReferenceEquals(this.pictField, value) != true)) {
                    this.pictField = value;
                    this.RaisePropertyChanged("pict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                if ((this.submittedDateField.Equals(value) != true)) {
                    this.submittedDateField = value;
                    this.RaisePropertyChanged("submittedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcSector", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class DcSector : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private string nameField;
        
        private int sectorIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sectorId {
            get {
                return this.sectorIdField;
            }
            set {
                if ((this.sectorIdField.Equals(value) != true)) {
                    this.sectorIdField = value;
                    this.RaisePropertyChanged("sectorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcAppDetail", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class DcAppDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private int imageIdField;
        
        private byte[] pictField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int imageId {
            get {
                return this.imageIdField;
            }
            set {
                if ((this.imageIdField.Equals(value) != true)) {
                    this.imageIdField = value;
                    this.RaisePropertyChanged("imageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] pict {
            get {
                return this.pictField;
            }
            set {
                if ((object.ReferenceEquals(this.pictField, value) != true)) {
                    this.pictField = value;
                    this.RaisePropertyChanged("pict");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcTech", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class DcTech : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private string nameField;
        
        private int techIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int techId {
            get {
                return this.techIdField;
            }
            set {
                if ((this.techIdField.Equals(value) != true)) {
                    this.techIdField = value;
                    this.RaisePropertyChanged("techId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcAppDetails2", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class DcAppDetails2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int appIdField;
        
        private string commentField;
        
        private int commentIdField;
        
        private System.Nullable<System.DateTime> dateField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private int ratingField;
        
        private System.Nullable<int> statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int appId {
            get {
                return this.appIdField;
            }
            set {
                if ((this.appIdField.Equals(value) != true)) {
                    this.appIdField = value;
                    this.RaisePropertyChanged("appId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int commentId {
            get {
                return this.commentIdField;
            }
            set {
                if ((this.commentIdField.Equals(value) != true)) {
                    this.commentIdField = value;
                    this.RaisePropertyChanged("commentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTechnology", ReplyAction="http://tempuri.org/IService1/GetTechnologyResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.TechnologyType>> GetTechnologyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetComment", ReplyAction="http://tempuri.org/IService1/GetCommentResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.CommentType>> GetCommentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImage", ReplyAction="http://tempuri.org/IService1/GetImageResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.ImageType>> GetImageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSector", ReplyAction="http://tempuri.org/IService1/GetSectorResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.SectorType>> GetSectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.UsrType>> GetUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetApp", ReplyAction="http://tempuri.org/IService1/GetAppResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.appType>> GetAppAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppDetails", ReplyAction="http://tempuri.org/IService1/GetAppDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.appType>> GetAppDetailsAsync(int id, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppIdea", ReplyAction="http://tempuri.org/IService1/GetAppIdeaResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcApp>> GetAppIdeaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppSector", ReplyAction="http://tempuri.org/IService1/GetAppSectorResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcSector>> GetAppSectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppDetail", ReplyAction="http://tempuri.org/IService1/GetAppDetailResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcAppDetail>> GetAppDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTech", ReplyAction="http://tempuri.org/IService1/GetTechResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcTech>> GetTechAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppDetails2", ReplyAction="http://tempuri.org/IService1/GetAppDetails2Response")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcAppDetails2>> GetAppDetails2Async();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AppIdeaStore.ServiceRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AppIdeaStore.ServiceRef.IService1>, AppIdeaStore.ServiceRef.IService1 {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.TechnologyType>> GetTechnologyAsync() {
            return base.Channel.GetTechnologyAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.CommentType>> GetCommentAsync() {
            return base.Channel.GetCommentAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.ImageType>> GetImageAsync() {
            return base.Channel.GetImageAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.SectorType>> GetSectorAsync() {
            return base.Channel.GetSectorAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.UsrType>> GetUserAsync() {
            return base.Channel.GetUserAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.appType>> GetAppAsync() {
            return base.Channel.GetAppAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.appType>> GetAppDetailsAsync(int id, string type) {
            return base.Channel.GetAppDetailsAsync(id, type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcApp>> GetAppIdeaAsync() {
            return base.Channel.GetAppIdeaAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcSector>> GetAppSectorAsync() {
            return base.Channel.GetAppSectorAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcAppDetail>> GetAppDetailAsync() {
            return base.Channel.GetAppDetailAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcTech>> GetTechAsync() {
            return base.Channel.GetTechAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<AppIdeaStore.ServiceRef.DcAppDetails2>> GetAppDetails2Async() {
            return base.Channel.GetAppDetails2Async();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://uscmpujmittal8.us.deloitte.com/WcfService/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService1,
        }
    }
}
